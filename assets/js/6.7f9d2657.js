(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{352:function(e,t,a){"use strict";a.r(t);var n=a(43),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"菜鸟的技术文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#菜鸟的技术文档"}},[e._v("#")]),e._v(" 菜鸟的技术文档")]),e._v(" "),a("h1",{attrs:{id:"vue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue"}},[e._v("#")]),e._v(" VUE")]),e._v(" "),a("hr"),e._v(" "),a("h1",{attrs:{id:"首先用引用官方的话来介绍vuejs："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#首先用引用官方的话来介绍vuejs："}},[e._v("#")]),e._v(" 首先用引用官方的话来介绍vuejs：")]),e._v(" "),a("blockquote",[a("p",[e._v("Vue 是一套用于构建用户界面的"),a("strong",[e._v("渐进式框架")]),e._v("。与其它大型框架不同的是，Vue 被设计为可以自底向上逐层应用。Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与"),a("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/single-file-components.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("现代化的工具链"),a("OutboundLink")],1),e._v("以及各种"),a("a",{attrs:{href:"https://github.com/vuejs/awesome-vue#libraries--plugins",target:"_blank",rel:"noopener noreferrer"}},[e._v("支持类库"),a("OutboundLink")],1),e._v("结合使用时，Vue 也完全能够为复杂的单页应用提供驱动。")])]),e._v(" "),a("blockquote",[a("p",[e._v("其实对vue基本的学习都可以在"),a("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/",target:"_blank",rel:"noopener noreferrer"}},[e._v("vue官网"),a("OutboundLink")],1),e._v("学到，这篇文章主要写的是我在学习vue时一些经历感想。")])]),e._v(" "),a("hr"),e._v(" "),a("h2",{attrs:{id:"框架和库-插件-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#框架和库-插件-的区别"}},[e._v("#")]),e._v(" 框架和库(插件)的区别")]),e._v(" "),a("ul",[a("li",[e._v("框架: 是一套完整的解决方案；对项目的入侵性较大，项目如果想更换框架，则需要重构整个项目；")]),e._v(" "),a("li",[e._v("库(插件): 提供某一个小功能，对项目入侵性小，如果某个库无法满足项目需求，可以很容易到其他库实现；")])]),e._v(" "),a("hr"),e._v(" "),a("h2",{attrs:{id:"后端mvc和前端mvvm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#后端mvc和前端mvvm"}},[e._v("#")]),e._v(" 后端MVC和前端MVVM")]),e._v(" "),a("ul",[a("li",[e._v("MVC是后端的分层概念：\nM-----Modle层，主要处理数据的CRUD；\nV-----视图层，主要为前端页面；\nC-----逻辑层，主要为逻辑处理;\n"),a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/17912672-00c72986bae4adda.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"MVC"}})]),e._v(" "),a("li",[e._v("MVVM是前端图层的概念，主要关注于视图分层：\nM-----Modle层，主要保存每个页面中单独的数据；\nV-----View层，主要为每个页面HTML结构；\nVM-----VM(ViewModel)层，主要为M和V之间的调度者，分隔M和V；\n"),a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/17912672-5fce47d442d2a942.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"MVVM"}})])]),e._v(" "),a("hr"),e._v(" "),a("h2",{attrs:{id:"vue基本代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue基本代码"}},[e._v("#")]),e._v(" Vue基本代码")]),e._v(" "),a("ol",[a("li",[e._v("项目中需要创建一个lib类库,存放vue文件;")]),e._v(" "),a("li",[e._v("html中引入vue文件；")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<script src="vue.js"><\/script>\n<body>\n  \x3c!--MVVM中的V--\x3e\n  <div id="app">\n    \x3c!--渲染今天天气真好--\x3e\n    <p>{{ msg }}</p>\n    <button @click="show"></button>\n  </div>\n\n  <script>\n    var vm = new Vue({  //MVVM中的VM\n      el: "#app",  //控制哪块的内容\n      data: {  //MVVM中的M\n        msg: "今天天气真好"\n      }，\n      methods: {  //定义了当前vue实例中所有可用的方法\n        show(){  //点击按钮显示msg的方法\n          alert(this.msg);  //在vm中获取data里的数据需 this. 出来\n        }\n      }\n    });\n  <\/script>\n</body>\n')])])]),a("ul",[a("li",[a("a",{attrs:{href:"https://cn.vuejs.org/v2/api/#%E6%8C%87%E4%BB%A4",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue的基本指令"),a("OutboundLink")],1)])]),e._v(" "),a("hr"),e._v(" "),a("h2",{attrs:{id:"过滤器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#过滤器"}},[e._v("#")]),e._v(" 过滤器")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("Vue.js允许你自定义过滤器，可被用作一些常见的文本格式化。过滤器只能用在两个地方: "),a("strong",[e._v("mustache")]),e._v("(插值表达式)和"),a("strong",[e._v("v-bind")]),e._v("表达式。过滤器应该被添加到JavaScript表达式的尾部，由 “管道” 符指示；过滤器采用就近调用原则；")])]),e._v(" "),a("li",[a("p",[e._v("过滤器调用格式")])])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<div id="app">\n  \x3c!--可以接多个过滤器--\x3e\n  <p>{{ data | 过滤器名称(...) | ... }}</p>\n</div>\n')])])]),a("ul",[a("li",[e._v("过滤器定义语法(全局)")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("<script>\n  Vue.filter('过滤器名称',function (data, ...) {  //可以传多个参数\n    // 第一个参数为调用格式中的data\n    // 其他参数为  过滤器名称(...)  中的参数\n  });\n<\/script>\n")])])]),a("ul",[a("li",[e._v("过滤器定义语法(局部/私有)")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("<script>\n  new Vue({\n    filters: { \n      过滤器名称:  function (data, ...) {\n        ...\n      }\n    }\n  });\n<\/script>\n")])])]),a("hr"),e._v(" "),a("h2",{attrs:{id:"修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修饰符"}},[e._v("#")]),e._v(" 修饰符")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/aaronthon/p/9225943.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("v-model修饰符、按键修饰符、事件修饰符、系统修饰符"),a("OutboundLink")],1),e._v(";")]),e._v(" "),a("li",[e._v("自定义全局按键修饰符:")])]),e._v(" "),a("blockquote",[a("p",[e._v("Vue.config.keyCodes.自定义键名称 = "),a("a",{attrs:{href:"https://www.cnblogs.com/yiven/p/7118056.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("按键键码"),a("OutboundLink")],1),e._v(";")])]),e._v(" "),a("hr"),e._v(" "),a("h2",{attrs:{id:"自定义指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义指令"}},[e._v("#")]),e._v(" 自定义指令")]),e._v(" "),a("ul",[a("li",[e._v("创建:")])]),e._v(" "),a("blockquote",[a("p",[e._v("Vue.directive('指令名称'， {\n..."),a("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/custom-directive.html#%E9%92%A9%E5%AD%90%E5%87%BD%E6%95%B0",target:"_blank",rel:"noopener noreferrer"}},[e._v("钩子函数"),a("OutboundLink")],1),e._v("\n})")])]),e._v(" "),a("ul",[a("li",[e._v("使用:")])]),e._v(" "),a("blockquote",[a("p",{directives:[{name:"指令名称",rawName:"v-指令名称"}]})]),e._v(" "),a("ul",[a("li",[e._v("局部:")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("<script>\n  new Vue({\n    directives: { \n      '指令名称': {\n        ...钩子函数\n      }\n    }\n  });\n<\/script>\n")])])]),a("ul",[a("li",[e._v("常用的钩子函数:")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("{\n  bind: function (el, ...) {  //el为引用的这个自定义指令的标签\n    //常用于处理样式(css)\n  },\n  inserted: function () {\n    //常用于处理逻辑问题(js)\n  },\n  update: function () {\n    //\n  }\n}\n")])])]),a("hr"),e._v(" "),a("h2",{attrs:{id:"生命周期函数-钩子-事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生命周期函数-钩子-事件"}},[e._v("#")]),e._v(" 生命周期函数(钩子/事件)")]),e._v(" "),a("p",[a("strong",[e._v("所有生命周期函数与el、data、methods同级")])]),e._v(" "),a("h3",{attrs:{id:"实例创建阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例创建阶段"}},[e._v("#")]),e._v(" 实例创建阶段:")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/17912672-e40c4f68e1579f76.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"实例创建阶段"}})]),e._v(" "),a("ul",[a("li",[e._v("beforeCreate () {}")])]),e._v(" "),a("blockquote",[a("p",[e._v("它在执行时，data和methods中的数据还未初始化；")])]),e._v(" "),a("ul",[a("li",[e._v("created () {}")])]),e._v(" "),a("blockquote",[a("p",[e._v("它在执行时，data和methods中的数据已经初始化；")])]),e._v(" "),a("ul",[a("li",[e._v("beforeMount() {}")])]),e._v(" "),a("blockquote",[a("p",[e._v("它在执行时，模板已经在内存中编辑完成了，但尚未将其渲染到页面当中；")])]),e._v(" "),a("ul",[a("li",[e._v("mounted() {}")])]),e._v(" "),a("blockquote",[a("p",[e._v("它在执行时，模板已经渲染到页面当中了；")])]),e._v(" "),a("h3",{attrs:{id:"实例运行阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例运行阶段"}},[e._v("#")]),e._v(" 实例运行阶段:")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/17912672-c5da092457dc84f6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"运行阶段"}})]),e._v(" "),a("ul",[a("li",[e._v("beforeUpdata () {}")])]),e._v(" "),a("blockquote",[a("p",[e._v("它在执行时，数据已经发生了改变，但没有被更新渲染到页面当中(VM未同步)；")])]),e._v(" "),a("ul",[a("li",[e._v("updata () {}")])]),e._v(" "),a("blockquote",[a("p",[e._v("它在执行时，新数据已经被更新渲染到页面当中了(VM已同步)；")])]),e._v(" "),a("h3",{attrs:{id:"实例销毁阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例销毁阶段"}},[e._v("#")]),e._v(" 实例销毁阶段:")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/17912672-194c8697d6f89725.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"销毁阶段"}})]),e._v(" "),a("ul",[a("li",[e._v("beforeDestroy () {}")])]),e._v(" "),a("blockquote",[a("p",[e._v("它在执行时，Vue实例已经从运行阶段进入销毁阶段，但methods、data、过滤器、指令...，都处于可用状态；")])]),e._v(" "),a("ul",[a("li",[e._v("destroyed () {}")])]),e._v(" "),a("blockquote",[a("p",[e._v("它在执行时，Vue实例已经被完全销毁；")])]),e._v(" "),a("hr"),e._v(" "),a("h2",{attrs:{id:"vue-resource实现get、post、jsonp请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-resource实现get、post、jsonp请求"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"https://github.com/pagekit/vue-resource",target:"_blank",rel:"noopener noreferrer"}},[e._v("vue-resource"),a("OutboundLink")],1),e._v("实现get、post、jsonp请求")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("config、body和errorCallback都是可选属性，但config、body不可省略，如果没有需创建空对象{ }；")])]),e._v(" "),a("li",[a("p",[e._v("全局配置数据接口根域名：")])])]),e._v(" "),a("blockquote",[a("p",[e._v("Vue.http.options.root = '根域名';")])]),e._v(" "),a("p",[e._v("或")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("http: {\n    root: '/root'\n}\n")])])]),a("blockquote",[a("p",[e._v("注意: 如配置过根域名后，get、post、jsonp请求方法的url应该为除根域名的相对路径；")])]),e._v(" "),a("ul",[a("li",[e._v("GET")])]),e._v(" "),a("blockquote",[a("p",[e._v("get(url, [config])")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// url为请求地址，config为配置对象，successCallback为成功回调\nthis.$http.get('/someUrl', [config]).then(successCallback, errorCallback); \n")])])]),a("ul",[a("li",[e._v("POST")])]),e._v(" "),a("blockquote",[a("p",[e._v("post(url, [body], [config])")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// url为请求地址，body是传送的数据，config为配置对象\n// successCallback为成功回调\nthis.$http.post('/someUrl', [body], [config]).then(successCallback, errorCallback); \n")])])]),a("blockquote",[a("p",[e._v("注意: 手动发起的post请求默认没有表单格式，所以有的服务器处理不了，这时就需要进入配置对象配置相应的对象，如，开启表单格式请求的对象为{ emulateJSON: true; }")])]),e._v(" "),a("ul",[a("li",[e._v("JSONP")])]),e._v(" "),a("blockquote",[a("p",[e._v("jsonp(url, [config])")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// url为请求地址，config为配置对象，successCallback为成功回调\nthis.$http.jsonp('/someUrl', [config]).then(successCallback, errorCallback); \n")])])]),a("blockquote",[a("p",[e._v("JSONP实现原理\n1.由于浏览器的安全性限制，不允许AJAX跨域请求(协议不同、域名不同、端口号不同 的数据接口)，浏览器认为这种访问不安全；\n2.可以通过动态创建script标签的形式，把script标签的src属性，指向数据接口的地址，因为script标签不存在跨域限制，这种数据获取方式，称作JSONP；")])]),e._v(" "),a("hr"),e._v(" "),a("h2",{attrs:{id:"过渡-动画"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#过渡-动画"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/transitions.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("过渡&动画"),a("OutboundLink")],1)]),e._v(" "),a("ul",[a("li",[e._v("过渡类名\n"),a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/17912672-6d992130ea2164fb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"过渡类名"}})])]),e._v(" "),a("blockquote",[a("p",[e._v("v-enter：表示进入过渡的初始阶段；\nv-enter-to：表示进入过渡的完成阶段；\nv-leave：表示离开过渡的初始阶段；\nv-leave-to：表示离开过渡的完成阶段；\nv-enter-active和v-leave-active：分别表示进入和离开过渡的生效时间段；")])]),e._v(" "),a("ul",[a("li",[e._v("第三方插件辅助transition的过渡&动画")])]),e._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"http://www.animate.net.cn/",target:"_blank",rel:"noopener noreferrer"}},[e._v("animate.css"),a("OutboundLink")],1),e._v("\nanimate.css提供了一套完整的过渡动画，我们只需要写入相应的类名就可以看到相应的过渡动画，但类名中需要写入基本类名animated ;")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<transition enter-active-class="animated ..." leave-active-class="animated ...">\n  <p>...</p>\n</transition>\n')])])]),a("p",[e._v("或者将基本类animated加到子元素身上")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<transition enter-active-class="..." leave-active-class="...">\n  <p class="animated">...</p>\n</transition>\n')])])]),a("ol",{attrs:{start:"2"}},[a("li",[a("a",{attrs:{href:"https://www.bootcss.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("bootrap.css"),a("OutboundLink")],1),e._v('\n使用:duration="ms"控制进入和离开过渡的时间')])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<transition enter-active-class="..." leave-active-class="..." :duration="300">\n  <p class="animated">...</p>\n</transition>\n')])])]),a("p",[e._v('或者使用:duration="{ enter: ms, leave: ms }"可以分开控制进入和离开过渡的时间')]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<transition enter-active-class="..." leave-active-class="..." :duration="{ enter: 200, leave: 500 }">\n  <p class="animated">...</p>\n</transition>\n')])])]),a("ul",[a("li",[a("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/transitions.html#JavaScript-%E9%92%A9%E5%AD%90",target:"_blank",rel:"noopener noreferrer"}},[e._v("半场过渡动画生命周期事件"),a("OutboundLink")],1)])]),e._v(" "),a("p",[e._v("vue把一整场过渡动画分为两个半场，分别为"),a("strong",[e._v("入场过渡动画")]),e._v("和"),a("strong",[e._v("离场过渡动画")]),e._v("，而每个半场都有自己相对应的生命周期事件，并且这些生命周期事件会作为普通事件一样用 v-on: 被绑定在 transition 标签上，事件函数也写在 methods 中；")]),e._v(" "),a("blockquote",[a("p",[a("strong",[e._v("入场过渡动画")]),e._v(" & "),a("strong",[e._v("离场过渡动画")]),e._v("\n如何绑定：")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<transition\n  v-on:before-enter="beforeEnter"  \x3c!--入场过渡动画开始之前--\x3e\n  v-on:enter="enter"  \x3c!--入场过渡动画进行时--\x3e\n  v-on:after-enter="afterEnter"  \x3c!--入场过渡动画结束后--\x3e\n  v-on:enter-cancelled="enterCancelled"  \x3c!--入场过渡动画取消(不常用)--\x3e\n\n  v-on:before-leave="beforeLeave" \x3c!--离场过渡动画开始前--\x3e\n  v-on:leave="leave"  \x3c!--离场过渡动画进行时--\x3e\n  v-on:after-leave="afterLeave"  \x3c!--离场过渡动画结束后--\x3e\n  v-on:leave-cancelled="leaveCancelled"  \x3c!--离场过渡动画取消(不常用)--\x3e\n>\n\n  ...\n\n</transition>\n')])])]),a("blockquote",[a("p",[a("strong",[e._v("入场过渡动画")]),e._v(" & "),a("strong",[e._v("离场过渡动画")]),e._v("\n事件函数：")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("methods: {  //el的用法与自定义指令相同，el就是引用它那个标签\n  beforeEnter (el) { ... },\n  enter (el, done) { \n\n    el.offsetWidth;  //这句代码本身没有什么意义，但它会让过渡动画进行强制刷新，使动画减少不必要的bug;\n \n    done();   //done() 相当于在enter()结束前调用了一下afterEnter()，使afterEnter()执行的更快；\n\n  },\n  afterEnter (el) { ... }\n  \n  ...\n}\n")])])]),a("ul",[a("li",[e._v("transition-group列表过渡动画")])]),e._v(" "),a("blockquote",[a("p",[e._v("与 transition 标签类似的标签，它将有 v-for 和 :key 的标签包裹，所以相当于是包裹了很多个标签，而 transition 只能包裹一个标签")])]),e._v(" "),a("blockquote",[a("p",[e._v("配合过渡类名v-enter、v-enter-to、v-enter-active、v-leave-active和v-move使用")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("/* 这是一个关于离场过渡的固定写法，此外 v-leave-active这样写还不够，\n还需将列表元素的width设置一个值(一般设置100%)，不然就会出现一些bug*/\n\n.v-move{\n  transition: all xx ease;\n}\n\n.v-leave-active{\n  position: absolute;\n}\n")])])]),a("blockquote",[a("p",[e._v('给 transition-group 添加 appear 属性可以实现列表在网页刚渲染时的过渡动画；\n添加 tag="xxx" 可以使 transition-group 标签在渲染时，渲染成自己设置的标签；')])]),e._v(" "),a("hr"),e._v(" "),a("h2",{attrs:{id:"vue组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue组件"}},[e._v("#")]),e._v(" Vue组件")]),e._v(" "),a("p",[e._v("什么是组件：组件的出现是为了拆分Vue实例的代码量的，能够让我们以不同的组件，来划分不同的功能模块；将来，我们需要什么样的功能，就可以去调用相应的组件；")]),e._v(" "),a("h3",{attrs:{id:"组件化与模块化的不同："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件化与模块化的不同："}},[e._v("#")]),e._v(" 组件化与模块化的不同：")]),e._v(" "),a("ul",[a("li",[e._v("模块化：是从代码逻辑的角度进行划分的；方便代码分层开发，保证每个功能模块的职能单一；")]),e._v(" "),a("li",[e._v("组件化：是从 UI 界面的角度进行划分的；前端的组件化，方便 UI 组件的重用；")])]),e._v(" "),a("h3",{attrs:{id:"创建组件的方法："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建组件的方法："}},[e._v("#")]),e._v(" 创建组件的方法：")]),e._v(" "),a("ul",[a("li",[e._v("方法一(Vue.extend)：")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// html引用\n// <my-com1></my-com1>\n\nvar com1 = Vue.extend({  // 创建了一个模板对象的组件\n  template: '<h1>这是使用Vue.extend创建的组件</h1>'\n});\nVue.component('myCom1', com1);\n\n// 或者\n\nVue.component('myCom1', Vue.extend({  // 创建了一个模板对象的组件\n  template: '<h1>这是使用Vue.extend创建的组件</h1>'\n}));\n")])])]),a("blockquote",[a("p",[e._v("注意: Vue.component创建组件名称时，如果使用的是驼峰命名，那么html引用该组件时，需将其单词与单词之间以 - 隔开，并为小写；如创建组件名称本就为小写创建则不需注意，直接以名称引用；")])]),e._v(" "),a("ul",[a("li",[e._v("方法二(字面量)：")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Vue.component('myCom1', {  // 创建了一个模板对象的组件\n  template: '<div><p>...</p><h1>这是使用Vue.extend创建的组件</h1></div>'\n});\n")])])]),a("blockquote",[a("p",[e._v("注意: 不论是哪种方式创建组件，template属性指向的模板内容，必须只有唯一的根元素才能显示更多内容；")])]),e._v(" "),a("ul",[a("li",[e._v("方法二改(template)：")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// 在被Vue控制的html内容外，创建tmplate的内容，并且遵循tmplate内容注意事项，\n之后还需要在Vue控制的内容元素内引用才能显示内容；\n<template id=\"tmp1\">\n  <div>\n    <p>...</p>\n    <span>...</span>\n    ...\n  </div>\n</template>\n\nVue.component('myCom1', {  // 创建了一个模板对象的组件\n  template: '#tmp1'\n});\n")])])]),a("ul",[a("li",[e._v("方法三(局部)：")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// 只能在当前Vue中使用\nnew Vue({\n  components: {\n    myCom1: {  // 引用时注意驼峰事项\n       template: '#tmp1'\n    }\n  }\n});\n")])])]),a("h3",{attrs:{id:"组件中的data："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件中的data："}},[e._v("#")]),e._v(" 组件中的data：")]),e._v(" "),a("p",[e._v("组件中的data与Vue实例中的data使用和引用方法一样，但创建方法不同；组件中data属性需要是一个函数，函数返回一个对象，对象中就是data中的数据；")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Vue.component('myCom1', {  // 创建了一个模板对象的组件\n  template: '<div>{{ msg }}</div>'，\n  data: function () {\n    return {\n      msg: '我是组件中的data属性'\n    };\n  }\n});\n")])])]),a("h3",{attrs:{id:"多个组件的切换-过渡动画"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多个组件的切换-过渡动画"}},[e._v("#")]),e._v(" 多个组件的切换&过渡动画")]),e._v(" "),a("p",[e._v("Vue提供了 component 标签帮助我们进行多个组件之间的切换；")]),e._v(" "),a("ul",[a("li",[e._v("component 标签使用方法：")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<div id="app">\n\n  <input type="button" value="mycom1" @click="comName=\'mycom1\'">\n  <input type="button" value="mycom2" @click="comName=\'mycom2\'">\n  <input type="button" value="mycom3" @click="comName=\'mycom3\'">\n  \x3c!--这里组件的名称使用了 \' \' 单引号包起来,\n  因为 :is 会将没有用单引号包裹起来的组件名称当做一个变量，\n  当然 :is 当中可以传入一个变量，这样就可以实现组件的切换--\x3e\n  \x3c!--<component :is="\'mycom1\'"></component>--\x3e\n  <component :is="comName"></component>\n\n</div>\n\n\nVue.component(\'mycom1\',{\n  template: \'<p>组件1</p>\'\n });\n\nVue.component(\'mycom2\',{\n  template: \'<p>组件2</p>\'\n });\n\nVue.component(\'mycom3\',{\n  template: \'<p>组件3</p>\'\n });\n\nnew Vue({\n  el: "#app",\n  data: {\n    comName: \'\'\n  }\n });\n')])])]),a("ul",[a("li",[e._v("多个组件的过渡动画\n多个组件的过渡简单很多，我们不需要使用 key 属性。相反，我们只需要使用 transition 标签；没有其他注意事项；")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<transition>\n  <component :is="comName"></component>\n</transition>\n')])])]),a("h3",{attrs:{id:"父亲组件向子组件传值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#父亲组件向子组件传值"}},[e._v("#")]),e._v(" 父亲组件向子组件传值")]),e._v(" "),a("blockquote",[a("p",[e._v("1.传递data数据(green)：\n"),a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/17912672-3ab682b81a2748ab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"父组件向子组件传递data数据"}})])]),e._v(" "),a("p",[e._v("如果Vue实例中 components(局部创建) 的组件(子组件)想获取Vue实例中 data 的数据(父组件)，那么直接输入 data 中的数据是获取不到的；我们只能通过在子组件标签上 v-bind: 绑定一个自定义属性名，然后将 data 中需要的数据传入到其中，并且需要在子组件中创建一个props数组，将自定义属性名定义一下，才能在组件中靠这个自定义属性名获取数据；")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('\x3c!--其中datamsg为自定义属性名，msg为data中的数据--\x3e\n<mycom v-bind:datamsg="msg"></mycom>\n\nnew Vue({\n  el: "",\n  data: {\n    msg: "111111"\n  },\n  components: {\n    mycom: {\n      template: \'<div>{{ datamsg }}</div>\',  //这样这个div中输出的就会是data中的msg内容\n      props: [ \'datamsg\' ]  //这一步在mycom中定义了datamsg，所以在template中才可以使用datamsg\n    }\n  }\n});\n')])])]),a("ul",[a("li",[e._v("components(局部创建) 中 data 与 props 的区别\n"),a("strong",[e._v("data 中的数据是可读写的，而 props 中的数据不能赋值，只读；")])])]),e._v(" "),a("blockquote",[a("p",[e._v("2.传递函数数据(green)&子组件向父组件传递data数据(skyblue)：\n"),a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/17912672-603173a182b5e7a2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"父组件给子组件传递函数数据"}})])]),e._v(" "),a("hr"),e._v(" "),a("h2",{attrs:{id:"vue内置组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue内置组件"}},[e._v("#")]),e._v(" Vue内置组件")]),e._v(" "),a("ol",[a("li",[e._v("template标签：\n模板组件，可以写一些html内容，然后引用到html中；")]),e._v(" "),a("li",[e._v("transition标签：\n动画组件，可以实现内容的过渡动画；")]),e._v(" "),a("li",[e._v("transition-groud标签：\n列表动画组件，可以实现列表的过渡动画；")]),e._v(" "),a("li",[e._v("comonent标签：\n辅助切换组件，帮助自定义的组件进行切换&过渡；")])]),e._v(" "),a("hr"),e._v(" "),a("h2",{attrs:{id:"使用ref获取dom元素和组件引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用ref获取dom元素和组件引用"}},[e._v("#")]),e._v(" 使用ref获取DOM元素和组件引用")]),e._v(" "),a("p",[e._v("引用( reference )")]),e._v(" "),a("ul",[a("li",[e._v("Vue提供了 $ref 这个属性，它可以在标签元素上定义一下，然后就可以在实例中获取此标签元素，当然在组件上定义也行;\n定义方法：")])]),e._v(" "),a("blockquote",[a("p",[e._v('ref="自定义名称"')])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<h1 ref="apph1">我是app中的h1标签</h1>\n\n<mycom ref="mycom"></mycom>\n')])])]),a("p",[e._v("获取方法：")]),e._v(" "),a("blockquote",[a("p",[e._v("this.$refs.自定义名称.获取属性")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("this.$refs.apph1.innerText  // 这是获取标签元素里的内容\n\nthis.$refs.mycom.func()  // 这是获取组件上的方法\n")])])]),a("hr"),e._v(" "),a("h2",{attrs:{id:"ue-router"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ue-router"}},[e._v("#")]),e._v(" ue-router")]),e._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://github.com/vuejs/vue-router",target:"_blank",rel:"noopener noreferrer"}},[e._v("我在github官网下载的vue-router"),a("OutboundLink")],1),e._v("，然后将vue-router.js文件用script的方式引入到html中练习；\n如果是模块开发，就需要使用到npm进行安装；")])]),e._v(" "),a("h3",{attrs:{id:"在vue中使用vue-router"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在vue中使用vue-router"}},[e._v("#")]),e._v(" 在vue中使用vue-router")]),e._v(" "),a("ol",[a("li",[e._v("导入 vue-router.js 文件；")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<script src="./lib/vue-router.js"><\/script>\n')])])]),a("ol",{attrs:{start:"2"}},[a("li",[e._v("使用 router-link(vue-router提供) 标签来导航或者 a 标签；")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<router-link to="/login" tag="span">登陆</router-link>\n<router-link to="/register" tag="span">注册</router-link>\n\n<a href="#/login">登陆</a>\n<a href="#/register">注册</a>\n')])])]),a("ol",{attrs:{start:"3"}},[a("li",[e._v("使用 router-view 来显示在 routes 中匹配到的对应的 component 组件；")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("<router-view></router-view>\n")])])]),a("ol",{attrs:{start:"4"}},[a("li",[e._v("创建对应组件；")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("var login = {\n  template: '<h1>登陆组件</h1>'\n}\n\nvar register= {\n  template: '<h1>注册组件</h1>'\n}\n")])])]),a("p",[e._v("4.1 通过 $route.query 获取 url 中的一些简单数据；")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// 假如url中有一些数据\n<router-link to=\"/login?id=250\">登陆</router-link>\n\nvar login = {\n  //  id---250\n  template: '<div>id---this.$route.query.id</div>'\n}\n")])])]),a("ol",{attrs:{start:"5"}},[a("li",[e._v("创建一个 router 实例，通过 routes 属性来定义路由器匹配规则；")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("var routerObj = new VueRouter({\n  routes: [\n    { path: '/login', component: login },\n    { path: '/register', component: register}\n  ]\n});\n")])])]),a("p",[e._v("5.1 使用 redirect 属性强制让用户进入页面时跳转到某个页面(设置默认显示页面)；")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("{ path: '/', redirect : '/login'}\n")])])]),a("p",[e._v("5.2 通过配置与 routes 同级的 linkActiveClass 配置项，来给导航元素设置高亮( 被选中时的样式 )；注意: 类名在激活 router 实例时就已经被赋予到导航上去了，即在页面中，被选中的导航元素上会被赋予该类名；")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("linkActiveClass: 'myactive'  // 默认类名为 router-link-active \n")])])]),a("p",[e._v("5.3 通过配置与 path 同级的 children 属性，来给某一个根目录添加数个子目录；")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("{  \n  path: '/account',\n  component: account,\n  children: [\n    { path: 'login', component: login },\n    { path: 'register', component: register }\n  ]\n}\n")])])]),a("p",[e._v("5.4 给 router-view 标签命名，并给一个路由匹配规则添加 components 属性，实现一个路径下多个组件；")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("<router-view name=\"header\"></router-view>\n<router-view name=\"left\"></router-view>\n<router-view name=\"main\"></router-view>\n\n{\n  path: '/',\n  components: {\n      'header': header,\n      'left': left,\n      'main': main\n    }\n  }\n")])])]),a("ol",{attrs:{start:"6"}},[a("li",[e._v("使用 router 属性来使用路由规则(注册到vue实例中)；")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('var vm = new Vue({\n  el: "#app",\n  router: routerObj\n});\n')])])]),a("hr"),e._v(" "),a("h2",{attrs:{id:"vue实例中的配置项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue实例中的配置项"}},[e._v("#")]),e._v(" vue实例中的配置项")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("el: ''\n用于规定一个vue实例管理的区域，如我需要"),a("strong",[e._v("管理")]),e._v("一个id为app的div，el: '#app'")])]),e._v(" "),a("li",[a("p",[e._v("data: {}\n用于"),a("strong",[e._v("存放")]),e._v("区域中的所有数据；")])]),e._v(" "),a("li",[a("p",[e._v("methods: {}\n用于"),a("strong",[e._v("存放")]),e._v("区域内的所有函数方法，侧重于业务逻辑；")])]),e._v(" "),a("li",[a("p",[e._v("watch: {}\n用于"),a("strong",[e._v("监听")]),e._v("区域内某些"),a("strong",[e._v("特定数据")]),e._v("的变化，从而进行某些具体的业务逻辑操作，一般与路由结合使用；")])]),e._v(" "),a("li",[a("p",[e._v("compnents: {}\n用于"),a("strong",[e._v("挂载")]),e._v("多个局部组件；")])]),e._v(" "),a("li",[a("p",[e._v("router: obj\n用于"),a("strong",[e._v("挂载")]),e._v("一个路由实例；")])]),e._v(" "),a("li",[a("p",[e._v("computed: {}\n用于"),a("strong",[e._v("定义")]),e._v("多个"),a("strong",[e._v("计算属性")]),e._v("，计算属性的本质为一个 function ，但在其使用时，只作为一个属性使用；")])]),e._v(" "),a("li",[a("p",[e._v("render(createElements){}\ncreateElements 是一个方法，调用该方法可以将el管理的区域替换成指定的组件模板；该属性的特性与 v-text 相似，都会将旧内容覆盖，而且不容易被修改，操作性小；")])])]),e._v(" "),a("h2",{attrs:{id:"vuex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vuex"}},[e._v("#")]),e._v(" VUEX")]),e._v(" "),a("p",[e._v("Vuex，是一个全局的共享数据存储区域，相当于一个数据仓库；")]),e._v(" "),a("ul",[a("li",[e._v("NPM 安装；")])]),e._v(" "),a("blockquote",[a("p",[e._v("npm i vuex -S")])]),e._v(" "),a("ul",[a("li",[e._v("导入 + 手动安装；")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("import Vue from 'vue'\nimport Vuex from 'vuex'\nVue.use(Vuex)\n")])])]),a("ul",[a("li",[e._v("创建 vuex 实例；\nvuex 创建实例的方法与 VueRouter 一致；\n与 Vue 实例也相似；")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("var store = new Vuex.Store({\n  state: {  // state 属性相当于 Vue 实例中的 data 属性\n     num: 0\n  },\n  mutations: {   // mutations属性相当于 Vue 实例中的 methods 属性\n   方法名 (state) {    // state 表示可以操作 state 中的数据\n       state.num\n      //  (state) 中只能传递两个参数，第一个为 state 第二个可以是一个对象，一个方法，一个任意参数\n    }\n  }\n})\n")])])]),a("blockquote",[a("p",[e._v("注意：state 中的数据如果需要被操作，推荐使用 mutations 来操作，不推荐直接在组件中操作；")])]),e._v(" "),a("ul",[a("li",[e._v("挂载 vuex 到 vue 实例中；\n挂载方法也跟 vue-router 挂载方法一样：")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("new Vue({\n  data: {},\n  methods: {},\n  router,\n  store  // 挂载 vuex 实例\n})\n")])])]),a("blockquote",[a("p",[e._v("当挂载了 vuex 实例后，就可以调用其中的数据了:")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// 挂载前\nthis.$store.state.数据名\nthis.$store.commit('方法名')\n// 挂载后\n$store.state.数据名\n$store.commit('方法名')\n")])])]),a("ul",[a("li",[e._v("getters 属性；\n与 state 同级；作用是对外提供数据；\n使用方法为：")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("getters: {  // 类似于计算属性 computed\n\n  自定义名称: function (state) {  // 与过滤器Vue.filter相似\n    return ...\n  }\n\n  // 简化写法\n  自定义名称(state){ \n    return ...\n  }\n\n}\n")])])]),a("p",[e._v("调用方法：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$store.getters.自定义名\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);